buildscript {
	repositories {
		maven {
			url = "https://repo1.maven.org/maven2"
		}
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'

	// MySQL Dirver
	runtimeOnly 'mysql:mysql-connector-java'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

jar {
	enabled = false
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

jib {
	from {
		image = 'adoptopenjdk/openjdk11:alpine-jre'
	}
	container {

		mainClass = 'com.test.StartApplication'
		jvmFlags = ['-Xms512m', '-Xmx512m', '-Xdebug', '-XshowSettings:vm', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseContainerSupport']
		ports = ['8080']

		environment = [SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"]
		labels = [version:project.version, name:project.name, group:project.group]

		creationTime = 'USE_CURRENT_TIMESTAMP'
		format = 'Docker'
	}
	extraDirectories {
		paths {
			path {
				from = file('build/libs')
			}
		}
	}
}
